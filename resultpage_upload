<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Upload to Firebase Storage</title>

    <!-- Boxicons -->
    <link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
    <!-- My CSS -->
    <link rel="stylesheet" href="tryon_style.css">

    <script>
        function triggerFileInput(buttonId) {
            document.getElementById(buttonId).click();
        }
        
        function loadFile(input, previewId) {
            let file = input.files[0];
            if (file) {
                let newImage = document.createElement("img");
                newImage.src = URL.createObjectURL(file);
                newImage.style.width = "100%";
                newImage.style.height = "100%";
                newImage.style.objectFit = "cover";

                let container = document.getElementById(previewId);
                container.innerHTML = '';
                container.appendChild(newImage);
            }
        }
    </script>
</head>
<body>
    <!-- SIDEBAR -->
    <section id="sidebar">
        <a href="#" class="brand">
            <i class='bx bxs-smile'></i>
            <span class="text">Virtual Try On</span>
        </a>
        <ul class="side-menu top">
            <li>
                <a href="index.html">
                    <i class='bx bxs-group' ></i>
                    <span class="text">My Page</span>
                </a>
            </li>
            <li class="active">
                <a href="tryon_page.html">
                    <i class='bx bxs-shopping-bag-alt' ></i>
                    <span class="text">Try On</span>
                </a>
            </li>
            <li>
                <a href="history.html">
                    <i class='bx bxs-heart' ></i>
                    <span class="text">LIKE</span>
                </a>
            </li>
        </ul>
        <ul class="side-menu">
            <li>
                <a href="#">
                    <i class='bx bxs-cog' ></i>
                    <span class="text">Settings</span>
                </a>
            </li>
            <li>
                <a href="#" class="logout">
                    <i class='bx bxs-log-out-circle' ></i>
                    <span class="text">Logout</span>
                </a>
            </li>
        </ul>
    </section>
    <!-- SIDEBAR -->

    <!-- CONTENT -->
    <section id="content">
        <!-- MAIN -->
        <main>
            <div class="head-title">
                <div class="left">
                    <h1>Try On</h1>
                    <ul class="breadcrumb">
                        <li>
                            <a href="#">Try On</a>
                        </li>
                        <li><i class='bx bx-chevron-right' ></i></li>
                        <li>
                            <a class="active" href="main_page.html">Home</a>
                        </li>
                    </ul>
                </div>
                <a href="resultTryon.html">
                    <button class="result-button">See Result</button>
                </a>
            </div>

            <ul class="box-info">
                <li>
                    <span class="text">
                        <h3>Picture of You!</h3>
                        <p>Select a picture of yourself</p>
                        <form class="inputImg" method="post" enctype="multipart/form-data">
                            <div class="addImage" id="image-show1">
                            </div>
                        </form>
                        <input type="file" id="file-input1" class="hidden-file-input" accept="image/*" onchange="loadFile(this, 'image-show1')">
                        <button class="custom-button" onclick="triggerFileInput('file-input1')">Choose File</button>
                    </span>
                </li>

                <li>
                    <span class="text">
                        <h3>What do you want to Try On?</h3>
                        <p>Select a picture of the cloth that you want to try on</p>
                        <form class="inputImg" method="post" enctype="multipart/form-data">
                            <div class="addImage" id="image-show2">
                            </div>
                        </form>
                        <input type="file" id="file-input2" class="hidden-file-input" accept="image/*" onchange="loadFile(this, 'image-show2')">
                        <button class="custom-button" onclick="triggerFileInput('file-input2')">Choose File</button>
                        <div class="select-type">
                            <button class="select-button">Top</button>
                            <button class="select-button">Bottom</button>
                            <button class="select-button">Dress</button>
                        </div>
                    </span>
                </li>
            </ul>
        </main>
        <!-- MAIN -->
    </section>
    <!-- CONTENT -->

    <!-- Firebase App (the core Firebase SDK) -->
    <script type="module">
        // Firebase 설정 스니펫 (Firebase 콘솔에서 얻을 수 있음)
        import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-app.js";
        import { getStorage, ref, uploadBytesResumable, getDownloadURL } from "https://www.gstatic.com/firebasejs/9.6.1/firebase-storage.js";

        const firebaseConfig = {
            apiKey: "",
            authDomain: "tryon-d88cf.firebaseapp.com",
            projectId: "tryon-d88cf",
            storageBucket: "tryon-d88cf.appspot.com",
            messagingSenderId: "1038933877746",
            appId: "1:1038933877746:web:673456858c7a50a7fe416b",
            measurementId: "G-1FZSCL1ZVL"
        };

        // Firebase 초기화
        const app = initializeApp(firebaseConfig);
        const storage = getStorage(app);

        // 이미지 업로드 함수 정의
        async function uploadImage(inputId, previewId) {
            const fileInput = document.getElementById(inputId);
            const file = fileInput.files[0];

            if (!file) {
                alert("Please select a file first!");
            } else {
                const storageRef = ref(storage, `images/${file.name}`);
                const uploadTask = uploadBytesResumable(storageRef, file);

                uploadTask.on('state_changed', 
                    (snapshot) => {
                        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                        console.log(`Upload is ${progress}% done`);
                    }, 
                    (error) => {
                        console.error("Error uploading file:", error);
                    }, 
                    async () => {
                        try {
                            const downloadURL = await getDownloadURL(storageRef);
                            console.log('File available at', downloadURL);
                            alert('Upload successful! File available at: ' + downloadURL);
                            displayImage(downloadURL, previewId);
                        } catch (error) {
                            console.error('Error getting download URL:', error);
                        }
                    }
                );
            }
        }

        // 이미지 표시 함수 정의
        function displayImage(downloadURL, previewId) {
            const img = document.createElement('img');
            img.src = downloadURL;
            img.alt = "Uploaded Image";
            img.style.maxWidth = '100%';
            document.getElementById(previewId).innerHTML = '';
            document.getElementById(previewId).appendChild(img);
        }

        window.uploadImage = uploadImage;

        // 버튼에 이벤트 핸들러 추가
        document.getElementById('file-input1').addEventListener('change', () => uploadImage('file-input1', 'image-show1'));
        document.getElementById('file-input2').addEventListener('change', () => uploadImage('file-input2', 'image-show2'));
    </script>
</body>
</html>
